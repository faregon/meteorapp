{"version":3,"sources":["body.js"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,QAAT,QAAyB,mBAAzB;AACA,SAAS,YAAT,QAA6B,sBAA7B;;AAEA,SAAS,KAAT,QAAsB,iBAAtB;;AAEA,OAAO,WAAP;AACA,OAAO,aAAP;;AAEA,SAAS,IAAT,CAAc,SAAd,CAAwB,SAAS,aAAT,GAAyB;AAC7C,SAAK,KAAL,GAAa,IAAI,YAAJ,EAAb;AACH,CAFD;;AAIA,SAAS,IAAT,CAAc,OAAd,CAAsB;AAClB,YAAQ;AACJ,cAAM,WAAW,SAAS,QAAT,EAAjB;AACA,YAAI,SAAS,KAAT,CAAe,GAAf,CAAmB,eAAnB,CAAJ,EAAyC;;AAErC,mBAAO,MAAM,IAAN,CAAW,EAAE,SAAS,EAAE,KAAK,IAAP,EAAX,EAAX,EAAuC,EAAE,MAAM,EAAE,WAAW,CAAC,CAAd,EAAR,EAAvC,CAAP;AACH;;AAED,eAAO,MAAM,IAAN,CAAW,EAAX,EAAe,EAAE,MAAM,EAAE,WAAW,CAAC,CAAd,EAAR,EAAf,CAAP;AAAwD,KAR1C;AASlB,sBAAkB;AACd,eAAO,MAAM,IAAN,CAAW,EAAE,SAAS,EAAE,KAAK,IAAP,EAAX,EAAX,EAAuC,KAAvC,EAAP;AACH;AAXiB,CAAtB;AAaA,SAAS,IAAT,CAAc,MAAd,CAAqB;AACjB,uBAAmB,KAAnB,EAA0B;;AAEtB,cAAM,cAAN;;;AAGA,cAAM,SAAS,MAAM,MAArB;AACA,cAAM,OAAO,OAAO,IAAP,CAAY,KAAzB;;;AAGA,cAAM,MAAN,CAAa;AACT,gBADS;AAET,uBAAW,IAAI,IAAJ,EAFF,EAAb;;;;AAMA,eAAO,IAAP,CAAY,KAAZ,GAAoB,EAApB;AACH,KAjBgB;AAkBjB,mCAA+B,KAA/B,EAAsC,QAAtC,EAAgD;AAC5C,iBAAS,KAAT,CAAe,GAAf,CAAmB,eAAnB,EAAoC,MAAM,MAAN,CAAa,OAAjD;AACH;AApBgB,CAArB","file":"body-compiled.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Template } from 'meteor/templating';\r\nimport { ReactiveDict } from 'meteor/reactive-dict';\r\n\r\nimport { Tasks } from '../api/tasks.js';\r\n\r\nimport './task.js';\r\nimport './body.html';\r\n\r\nTemplate.body.onCreated(function bodyOnCreated() {\r\n    this.state = new ReactiveDict();\r\n});\r\n\r\nTemplate.body.helpers({\r\n    tasks() {\r\n        const instance = Template.instance();\r\n        if (instance.state.get('hideCompleted')) {\r\n            // If hide completed is checked, filter tasks\r\n            return Tasks.find({ checked: { $ne: true } }, { sort: { createdAt: -1 } });\r\n        }\r\n        // Otherwise, return all of the tasks\r\n        return Tasks.find({}, { sort: { createdAt: -1 } });    },\r\n    incompleteCount() {\r\n        return Tasks.find({ checked: { $ne: true } }).count();\r\n    },\r\n});\r\nTemplate.body.events({\r\n    'submit .new-task'(event) {\r\n        // Prevent default browser form submit\r\n        event.preventDefault();\r\n\r\n        // Get value from form element\r\n        const target = event.target;\r\n        const text = target.text.value;\r\n\r\n        // Insert a task into the collection\r\n        Tasks.insert({\r\n            text,\r\n            createdAt: new Date(), // current time\r\n        });\r\n\r\n        // Clear form\r\n        target.text.value = '';\r\n    },\r\n    'change .hide-completed input'(event, instance) {\r\n        instance.state.set('hideCompleted', event.target.checked);\r\n    },\r\n});"]}